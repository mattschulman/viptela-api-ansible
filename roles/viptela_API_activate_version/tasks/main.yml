---

# Get the vedge info from vManage - only get valid devices so that keys like 'host-name' are present.
- name: "# Get edge device info from vManage"
  uri:
    url: "https://{{ ansible_host }}/dataservice/system/device/vedges/?validity=valid"
    method: GET
    headers:
      Cookie: "{{ login_result.set_cookie }}"
    validate_certs: no
    return_content: yes
  register: pre_activate_software_result

# - debug: var=deviceDictList

# - debug: var=pre_activate_software_result.json.data

# Validate that for each device in the input list, the version is in the availableVersions list for the device.
# The validatedDeviceDictList list will only contain devices that have versions that can be activated.
- name: "# Validate that input versions are installed"
  ansible.builtin.set_fact:
    validatedDeviceDictList: "{{ deviceDictList |  validate_versions(pre_activate_software_result.json.data) }}"

# - debug: var=validatedDeviceDictList

# For devices that the input version is not valid, generate a list of skipped devices to be displayed at the end.
- name: "# Generate Skipped device list for devices that do not have the version installed"
  ansible.builtin.set_fact:
    skippedDeviceDictList: "{{ deviceDictList |  create_skipped_versions(pre_activate_software_result.json.data) }}"

# If there are entries in the validatedDeviceDictList:
- block:  
  # Build the POST body and send to vManage, getting the jobID back.
  - name: "# Activate Version on vEdge"
    viptela_api_activate_version:
      vmanage: "{{ ansible_host }}"
      cookie: "{{ login_result.set_cookie }}"
      token: "{{ token_result.content }}"
      device_list: "{{ validatedDeviceDictList }}"
    register: activate_result
  - debug: var=activate_result.last_status

  # Keep querying the jobID until the status is 'done'.
  - name: Get activate status and repeat until Complete - FAILED == In Progress
    uri:
      method: GET
      url: "https://{{ ansible_host }}/dataservice/device/action/status/{{ activate_result.last_status }}"
      headers:
        Cookie: "{{ login_result.set_cookie }}"
      validate_certs: no
      return_content: yes
    register: activate_status
    until: activate_status.json.summary.status == 'done'
    retries: 60
    delay: 60

  # Get the valid vedge device info again so that the activations can be verified.
  - name: "# Get edge device info from vManage"
    uri:
      url: "https://{{ ansible_host }}/dataservice/system/device/vedges/?validity=valid"
      method: GET
      headers:
        Cookie: "{{ login_result.set_cookie }}"
      validate_certs: no
      return_content: yes
    register: post_activate_software_result

  # - debug: var=validatedDeviceDictList

  # Loop through the devices in the validatedDeviceDictList, run the external tasks, passing in the device data for the hostname
  # for the device in the loop.
  - name: "# Validate software activation"
    ansible.builtin.include_tasks:
      file: "validate_software_activate.yml"
    vars:
      postActivateResultItem: "{{ post_activate_software_result.json.data | selectattr('host-name', 'equalto', postActivateItem['hostname']) }}"
    loop: "{{ validatedDeviceDictList }}"
    loop_control:
      loop_var: postActivateItem
      label: postActivateItem['hostname']
      
  when: validatedDeviceDictList

# Print the skipped list if any devices were skipped
- debug: var=skippedDeviceDictList
  when: skippedDeviceDictList